name: API Deployment
on:
  push:
    branches: [ backend-api ]
permissions: write-all

jobs:
  Version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: cd api && npm ci
      - run: cd api && npm run build

    BuildPushDocker:
      runs-on: ubuntu-latest
      needs: [ Version ]
      steps:
        - name: "Git: Pull Source Code"
          uses: actions/checkout@v3
        - name: "Docker: Set up QEMU"
          uses: docker/setup-qemu-action@v3
        - name: "Docker: Set up Buildx"
          uses: docker/setup-buildx-action@v3
        - name: "Docker: Login Docker Hub"
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: "Docker: Build And Push Image"
          uses: docker/build-push-action@v5
          with:
            context: .
            file: Dockerfile
            push: true
            tags: ericaskari/llm-wireframe:latest,ericaskari/llm-wireframe:${{needs.Version.outputs.version}}
            cache-from: type=registry,ref=ericaskari/llm-wireframe:latest
            cache-to: type=inline

    Deploy:
      runs-on: ubuntu-latest
      needs: [ BuildPushDocker, Version ]
      steps:
        - name: "Git: Pull Source Code"
          uses: actions/checkout@v3
        - name: "Configure: kubectl"
          uses: ./.github/workflows/configure-kubectl
          with:
            KUBE_CONFIG_BASE64: ${{ secrets.KUBE_CONFIG_BASE64 }}
        - name: "Configure: yq"
          uses: dcarbone/install-yq-action@v1.1.1
        - name: "Kubernetes: Deploy"
          run: |
            export IMAGE_TAG=ericaskari/llm-wireframe:${{needs.Version.outputs.version}}
            yq e -i 'select(.metadata.name == "deployment-draw2form") .spec.template.spec.containers[0].image = env(IMAGE_TAG)' deployment.yml
            kubectl apply --filename ./deployment.yml
        - name: "Git: Commit"
          uses: stefanzweifel/git-auto-commit-action@v5
          with:
            commit_message: "[skip ci] Deployed to Production environment ${{ needs.BuildPushDocker.outputs.image }}"
    #  Train:



